name: r2s-openwrt-nightly

on:
  schedule:
    - cron: 0 11 * * * # 定时任务触发
  push:
    branches:
      - main # 修改主分支时触发ci流程

jobs:
  r2s-openwrt-nightly:
    runs-on: ubuntu-latest
    name: r2s-openwrt-nightly

    steps:
      - name: Checkout # 检出配置
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Checkout code # 检出代码
        run: |
          cd ..
          git clone https://github.com/coolsnowwolf/lede

      - name: Space cleanup # 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Update feeds # 更新feeds
        run: |
          cd ../lede
          # 添加新的feeds源
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Modify Static IP Config # 定制化路由器IP地址,替换192.168.1.1后面的部分
        run: |
          cd ../lede
          # 修改路由器IP地址
          sed -i 's/192.168.1.1/192.168.10.1/g' ./package/base-files/files/bin/config_generate

      - name: Generate configuration file # 生成编译配置
        run: |
          cd ../lede
          rm -f ./.config*
          mv $GITHUB_WORKSPACE/config-r2s.txt ./.config
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download # 预下载数据
        run: |
          cd ../lede
          make download -j16

      - name: Compile firmware # 编译固件
        run: |
          cd ../lede
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact # 准备上传文件
        run: |
          cd ../lede
          mkdir -p $GITHUB_WORKSPACE/artifact/firmware
          mkdir -p $GITHUB_WORKSPACE/artifact/package
          mkdir -p $GITHUB_WORKSPACE/artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) $GITHUB_WORKSPACE/artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") $GITHUB_WORKSPACE/artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") $GITHUB_WORKSPACE/artifact/buildinfo/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware/